from pyspark.sql import SparkSession
from pyspark.sql.functions import col, avg, current_timestamp
from pyspark.sql.types import FloatType


def main():
    spark = SparkSession.builder.appName("SilverToGold").getOrCreate()

    # –ó—á–∏—Ç—É—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
    bio_df = spark.read.parquet("/opt/airflow/silver/athlete_bio")
    results_df = spark.read.parquet("/opt/airflow/silver/athlete_event_results")

    # –ü—Ä–∏–≤–æ–¥–∏–º–æ height/weight –¥–æ —á–∏—Å–ª–æ–≤–∏—Ö —Ç–∏–ø—ñ–≤
    bio_df = bio_df.withColumn("height", col("height").cast(FloatType())).withColumn(
        "weight", col("weight").cast(FloatType())
    )

    # –í–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç –∫–æ–ª–æ–Ω–∫–∏ country_noc –∑ results_df, —â–æ–± –Ω–µ –±—É–ª–æ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—É
    results_df = results_df.drop("country_noc")

    # JOIN –ø–æ athlete_id
    joined_df = results_df.join(bio_df, on="athlete_id", how="inner")

    # –ê–≥—Ä–µ–≥–∞—Ü—ñ—è
    agg_df = joined_df.groupBy("sport", "medal", "sex", "country_noc").agg(
        avg("height").alias("avg_height"), avg("weight").alias("avg_weight")
    )

    # –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é
    final_df = agg_df.withColumn("timestamp", current_timestamp())
    final_df.show()

    # –ó–∞–ø–∏—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    final_df.write.mode("overwrite").parquet("/opt/airflow/gold/avg_stats")

    print("üéØ –ó–±–µ—Ä–µ–∂–µ–Ω–æ —É gold/avg_stats")
    spark.stop()


if __name__ == "__main__":
    main()
