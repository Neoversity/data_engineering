from kafka import KafkaConsumer, KafkaProducer
import json

# –°–ø–æ–∂–∏–≤–∞—á —á–∏—Ç–∞—î –∑ —Ç–æ–ø—ñ–∫–∞ –∑ –¥–∞–Ω–∏–º–∏ –≤—ñ–¥ —Å–µ–Ω—Å–æ—Ä—ñ–≤
consumer = KafkaConsumer(
    "building_sensors_anton",
    bootstrap_servers="localhost:9092",
    auto_offset_reset="earliest",
    value_deserializer=lambda m: json.loads(m.decode('utf-8'))
)

# –í–∏—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∞–ª–µ—Ä—Ç—ñ–≤
producer = KafkaProducer(
    bootstrap_servers="localhost:9092",
    value_serializer=lambda m: json.dumps(m).encode('utf-8')
)

for message in consumer:
    data = message.value
    alert = None

    if data["temperature"] > 40.0:
        alert = {
            "sensor_id": data.get("sensor_id", "unknown"),
            "timestamp": data.get("timestamp", ""),
            "temperature": data["temperature"],
            "message": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–µ—Ä–µ–≤–∏—â—É—î 40¬∞C"
        }
        producer.send("temperature_alerts_anton", alert)
        print("üö® –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–∏–π –∞–ª–µ—Ä—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ:", alert)

    if data["temperature"] < 20.0:
        alert = {
            "sensor_id": data.get("sensor_id", "unknown"),
            "timestamp": data.get("timestamp", ""),
            "temperature": data["temperature"],
            "message": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞–Ω–∞–¥—Ç–æ –Ω–∏–∑—å–∫–∞"
        }
        producer.send("temperature_alerts_anton", alert)
        print("‚ùÑÔ∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–∏–π –∞–ª–µ—Ä—Ç (–Ω–∏–∑—å–∫–∞):", alert)

    if data["humidity"] > 80.0 or data["humidity"] < 20.0:
        alert = {
            "sensor_id": data.get("sensor_id", "unknown"),
            "timestamp": data.get("timestamp", ""),
            "humidity": data["humidity"],
            "message": "–í–æ–ª–æ–≥—ñ—Å—Ç—å –ø–æ–∑–∞ –¥–æ–ø—É—Å—Ç–∏–º–∏–º–∏ –º–µ–∂–∞–º–∏"
        }
        producer.send("humidity_alerts_anton", alert)
        print("üíß –ê–ª–µ—Ä—Ç –≤–æ–ª–æ–≥–æ—Å—Ç—ñ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ:", alert)
